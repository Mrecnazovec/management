import { useForm, SubmitHandler } from 'react-hook-form'
import { useState } from 'react'
import axios from 'axios'
import toast from 'react-hot-toast'
import { Form, FormField, FormItem, FormLabel, FormControl, FormMessage } from '@/components/ui/form-element/Form'
import { Input } from '@/components/ui/form-element/Input'
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/Select'
import { Button } from '@/components/ui/Button'
import { Checkbox } from '@/components/ui/Checkbox'
import { validPhone } from '@/shared/regex'
import Link from 'next/link'
import { PUBLIC_URL } from '@/config/url.config'

interface IContactFormInput {
	name: string
	tel: string
	telegram: string
	status: string
	agreed: boolean
}

export function ContactForm() {
	const form = useForm<IContactFormInput>({
		mode: 'onChange',
		defaultValues: {
			name: '',
			tel: '',
			telegram: '',
			status: '',
			agreed: false,
		},
	})

	const { control, handleSubmit, setValue } = form

	const agreed = form.watch('agreed')

	const sendToTelegram = async (data: IContactFormInput) => {
		const chatId = ''
		const token = ''
		const url = `https://api.telegram.org/bot${token}/sendMessage`

		const message = `
üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:
üë§ –ò–º—è: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.tel}
üí¨ –¢–µ–ª–µ–≥—Ä–∞–º: ${data.telegram}
üìå –°—Ç–∞—Ç—É—Å: ${data.status}
‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É: ${data.agreed ? '–î–∞' : '–ù–µ—Ç'}
`

		try {
			await axios.post(url, {
				chat_id: chatId,
				text: message,
				parse_mode: 'Markdown',
			})
			toast.success('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
			form.reset()
		} catch (error) {
			toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ')
		}
	}

	const onSubmit: SubmitHandler<IContactFormInput> = (data) => {
		if (!data.agreed) {
			toast.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
			return
		}
		sendToTelegram(data)
	}

	return (
		<div className='max-w-xl mx-auto'>
			<h2 className='text-2xl font-bold text-center mb-1'>–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h2>
			<p className='text-center text-muted-foreground mb-6'>–∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏</p>
			<Form {...form}>
				<form onSubmit={handleSubmit(onSubmit)} className='space-y-4'>
					<FormField
						control={control}
						name='name'
						rules={{ required: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è' }}
						render={({ field }) => (
							<FormItem>
								<FormLabel>–ò–º—è</FormLabel>
								<FormControl>
									<Input placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û' {...field} />
								</FormControl>
								<FormMessage />
							</FormItem>
						)}
					/>

					<FormField
						control={control}
						name='tel'
						rules={{
							required: '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
							pattern: {
								value: validPhone,
								message: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä',
							},
						}}
						render={({ field }) => (
							<FormItem>
								<FormLabel>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</FormLabel>
								<FormControl>
									<Input placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞' {...field} />
								</FormControl>
								<FormMessage />
							</FormItem>
						)}
					/>

					<FormField
						control={control}
						name='telegram'
						rules={{ required: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —é–∑–µ—Ä–Ω–µ–π–º' }}
						render={({ field }) => (
							<FormItem>
								<FormLabel>–Æ–∑–µ—Ä —Ç–µ–ª–µ–≥—Ä–∞–º–º</FormLabel>
								<FormControl>
									<Input placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —é–∑–µ—Ä–Ω–µ–π–º' {...field} />
								</FormControl>
								<FormMessage />
							</FormItem>
						)}
					/>

					<FormField
						control={control}
						name='status'
						rules={{ required: '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å' }}
						render={({ field }) => (
							<FormItem>
								<FormLabel>–°—Ç–∞—Ç—É—Å</FormLabel>
								<Select onValueChange={field.onChange} defaultValue={field.value}>
									<FormControl>
										<SelectTrigger className='w-full'>
											<SelectValue placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ç—É—Å' />
										</SelectTrigger>
									</FormControl>
									<SelectContent>
										<SelectItem value='–ò–∑ –¢–∞—à–∫–µ–Ω—Ç–∞'>–ò–∑ –¢–∞—à–∫–µ–Ω—Ç–∞</SelectItem>
										<SelectItem value='–ò–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–π'>–ò–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–π</SelectItem>
										<SelectItem value='–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π'>–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π</SelectItem>
									</SelectContent>
								</Select>
								<FormMessage />
							</FormItem>
						)}
					/>

					<FormField
						control={control}
						name='agreed'
						rules={{ required: true }}
						render={({ field }) => (
							<FormItem className='flex items-center gap-2'>
								<FormControl>
									<Checkbox checked={field.value} onCheckedChange={field.onChange} />
								</FormControl>
								<FormLabel className='text-sm text-muted-foreground gap-1'>–î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É <Link href={PUBLIC_URL.agreement()} className='underline'>–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</Link></FormLabel>
							</FormItem>
						)}
					/>

					<Button type='submit' className='w-full' disabled={!form.formState.isValid}>
						–û—Ç–ø—Ä–∞–≤–∏—Ç—å
					</Button>
				</form>
			</Form>
		</div>
	)
}
